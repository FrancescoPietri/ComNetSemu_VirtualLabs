#!/usr/bin/python
from mininet.topo import Topo
from mininet.net import Mininet
from mininet.node import OVSKernelSwitch, RemoteController
from mininet.cli import CLI
from mininet.link import TCLink


class Uunet(Topo):
    def __init__(self):
        Topo.__init__(self)
        # Adding Switches
        s0 = self.addSwitch("montreal0", dpid="0000000000000002")
        s1 = self.addSwitch("halifax1", dpid="0000000000000003")
        s2 = self.addSwitch("london2", dpid="0000000000000004")
        s3 = self.addSwitch("ottawa3", dpid="0000000000000005")
        s4 = self.addSwitch("newyork44", dpid="0000000000000006")
        s5 = self.addSwitch("philadel5", dpid="0000000000000007")
        s6 = self.addSwitch("boston6", dpid="0000000000000008")
        s7 = self.addSwitch("hartford7", dpid="0000000000000009")
        s8 = self.addSwitch("baltimor8", dpid="000000000000000a")
        s9 = self.addSwitch("washingt9", dpid="000000000000000b")
        s10 = self.addSwitch("stockhol0", dpid="000000000000000c")
        s11 = self.addSwitch("london11", dpid="000000000000000d")
        s12 = self.addSwitch("austin12", dpid="000000000000000e")
        s13 = self.addSwitch("dallas13", dpid="000000000000000f")
        s14 = self.addSwitch("houston14", dpid="0000000000000010")
        s15 = self.addSwitch("neworlea5", dpid="0000000000000011")
        s16 = self.addSwitch("jacksonv6", dpid="0000000000000012")
        s17 = self.addSwitch("orlando17", dpid="0000000000000013")
        s18 = self.addSwitch("miami18", dpid="0000000000000014")
        s19 = self.addSwitch("monaco19", dpid="0000000000000015")
        s20 = self.addSwitch("buffalo20", dpid="0000000000000016")
        s21 = self.addSwitch("clevelan1", dpid="0000000000000017")
        s22 = self.addSwitch("cologne22", dpid="0000000000000018")
        s23 = self.addSwitch("pittsbur3", dpid="0000000000000019")
        s24 = self.addSwitch("detroit24", dpid="000000000000001a")
        s25 = self.addSwitch("chicago25", dpid="000000000000001b")
        s26 = self.addSwitch("indianap6", dpid="000000000000001c")
        s27 = self.addSwitch("kansasci7", dpid="000000000000001d")
        s28 = self.addSwitch("stlouis28", dpid="000000000000001e")
        s29 = self.addSwitch("edmonton9", dpid="000000000000001f")
        s30 = self.addSwitch("tokyo30", dpid="0000000000000020")
        s31 = self.addSwitch("losangel1", dpid="0000000000000021")
        s32 = self.addSwitch("lasvegas2", dpid="0000000000000022")
        s33 = self.addSwitch("atlanta33", dpid="0000000000000023")
        s34 = self.addSwitch("raleigh34", dpid="0000000000000024")
        s35 = self.addSwitch("hawaii35", dpid="0000000000000025")
        s36 = self.addSwitch("hawaii36", dpid="0000000000000026")
        s37 = self.addSwitch("phoenix37", dpid="0000000000000027")
        s38 = self.addSwitch("sandiego8", dpid="0000000000000028")
        s39 = self.addSwitch("toronto39", dpid="0000000000000029")
        s40 = self.addSwitch("kitchene0", dpid="000000000000002a")
        s41 = self.addSwitch("calgary41", dpid="000000000000002b")
        s42 = self.addSwitch("vancouve2", dpid="000000000000002c")
        s43 = self.addSwitch("seattle43", dpid="000000000000002d")
        s44 = self.addSwitch("portland4", dpid="000000000000002e")
        s45 = self.addSwitch("sanfranc5", dpid="000000000000002f")
        s46 = self.addSwitch("saltlake6", dpid="0000000000000030")
        s47 = self.addSwitch("denver47", dpid="0000000000000031")
        s48 = self.addSwitch("minneapo8", dpid="0000000000000032")

        # Adding Links
        self.addLink(s0, s1)
        self.addLink(s0, s3)
        self.addLink(s0, s4)
        self.addLink(s2, s39)
        self.addLink(s3, s39)
        self.addLink(s4, s5)
        self.addLink(s4, s6)
        self.addLink(s4, s45)
        self.addLink(s4, s13)
        self.addLink(s4, s21)
        self.addLink(s4, s22)
        self.addLink(s4, s25)
        self.addLink(s5, s8)
        self.addLink(s6, s9)
        self.addLink(s6, s7)
        self.addLink(s7, s20)
        self.addLink(s8, s9)
        self.addLink(s9, s33)
        self.addLink(s9, s34)
        self.addLink(s9, s10)
        self.addLink(s9, s11)
        self.addLink(s9, s13)
        self.addLink(s9, s14)
        self.addLink(s9, s45)
        self.addLink(s9, s23)
        self.addLink(s9, s25)
        self.addLink(s9, s27)
        self.addLink(s9, s31)
        self.addLink(s12, s13)
        self.addLink(s12, s14)
        self.addLink(s13, s33)
        self.addLink(s13, s43)
        self.addLink(s13, s45)
        self.addLink(s13, s14)
        self.addLink(s13, s25)
        self.addLink(s13, s27)
        self.addLink(s13, s31)
        self.addLink(s14, s37)
        self.addLink(s14, s15)
        self.addLink(s14, s18)
        self.addLink(s15, s17)
        self.addLink(s15, s18)
        self.addLink(s16, s33)
        self.addLink(s16, s17)
        self.addLink(s17, s18)
        self.addLink(s18, s19)
        self.addLink(s18, s33)
        self.addLink(s20, s21)
        self.addLink(s20, s39)
        self.addLink(s21, s24)
        self.addLink(s21, s23)
        self.addLink(s21, s48)
        self.addLink(s24, s25)
        self.addLink(s25, s33)
        self.addLink(s25, s43)
        self.addLink(s25, s45)
        self.addLink(s25, s48)
        self.addLink(s25, s26)
        self.addLink(s25, s27)
        self.addLink(s26, s28)
        self.addLink(s27, s43)
        self.addLink(s27, s45)
        self.addLink(s27, s47)
        self.addLink(s27, s28)
        self.addLink(s29, s41)
        self.addLink(s30, s43)
        self.addLink(s31, s32)
        self.addLink(s31, s36)
        self.addLink(s31, s38)
        self.addLink(s31, s45)
        self.addLink(s32, s37)
        self.addLink(s32, s47)
        self.addLink(s33, s34)
        self.addLink(s35, s45)
        self.addLink(s37, s38)
        self.addLink(s39, s40)
        self.addLink(s39, s41)
        self.addLink(s41, s42)
        self.addLink(s42, s43)
        self.addLink(s43, s44)
        self.addLink(s43, s45)
        self.addLink(s44, s45)
        self.addLink(s45, s46)
        self.addLink(s46, s47)


topos = {"Uunet": (lambda: Uunet())}
